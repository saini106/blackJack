@startuml BlackJack

interface RuleSet {
    + {abstract} void EvaluateCard()
    + {abstract} void EvaluateHand()
    + {abstract} void MeetsWinCondition()
    + {abstract} void MeetsLoseCondition()
    + {abstract} void Draw()
}

BlackJack <|.. RuleSet
abstract BlackJack {
    - {static} int MaxDeckSize
    - {static} int MaxHandSize
    - {static} int MaxDraw
    - {static} int MaxDiscard
    --
    + {static} EvaluateHand( hand:ArrayList<Card> ):int
    + {static} EvaluateCard( f:Card.Face ):int
    + {abstract} Draw():void
    + {abstract} Discard():void
    + {abstract} CreateHand():void
    + {abstract} MeetsWinCondition():void
    ..Getters..
    + {static} getMaxDeckSize():int
    + {static} getMaxHandSize():int
    + {static} getMaxDraw():int
    + {static} getMaxDiscard():int
}

CardGame <|-- BlackJack


class CardGame {
    - Player Player
    - Player Dealer
    - Stack<Card> Deck
    --
    + MeetsWinCondition():bool
    + {static} GenerateDeck():Stack<Card>
    + {static} getWinner( p2:Player, p1:Player ):Player
    + {static} Draw( p:Player ):void
    + {static} Discard( p:Player ):void
    + {static} CreateHand():ArrayList<Card>
    ..Getters..
    + getPlayer():Player
    + getDealer():Player
    + getDeck():Stack<Card>
}

CardGame "1" *-- Player : contains
CardGame "1" *-- Dealer : contains
CardGame "Many" *-- Card : contains
class Player {
    - {static} int nextNumber;
    - int number
    - ArrayList<Card> Hand
    - int handValue
    + ShowHand():void
    --
    + Player (c1:Card, c2:Card):Player
    + Player ():Player
    + hasFullHand():bool
    + addCard( c:Card ):void
    ..Getters..
    + {static} getNextNumber():int
    + getHandValue():int
    + getNumber():int
    + getCard( i:int ):Card
    ..Setters..
    + setHandValue( value:int ):int
}

Dealer <|-- Player
class Dealer {
    --
    + getRevealedCard():Card
}

Player "2" *-- Card : contains
class Card {
   - Suit suit
   - Face face
   --
   + {static} faceToString( f:Face ):String
   + {static} suitToString( s:Suit ):String
   ..Getters..
   + getSuit():Suit
   + getFace():Face
   + toString():String
}

Card "1" *-- "Many" Suit : Contains
Card "1" *-- "Many" Face : Contains
enum Face {
    ONE
    TWO
    THREE
    FOUR
    FIVE
    SIX
    SEVEN
    EIGHT
    NINE
    TEN
    JACK
    KING
    QUEEN
    ACE
}

enum Suit {
    HEARTS
    DIAMONDS 
    SPADES 
    CLUBS
}

@enduml